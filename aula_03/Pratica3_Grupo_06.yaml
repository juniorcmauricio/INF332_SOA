openapi: 3.0.0
info:
  title: CompreBem Marketeplace API — Produtos
  description: |-
       # API de Integração de Produtos (CompreBem)
        Esta API permite que os parceiros (lojistas) criem, atualizem, excluam e pesquisem produtos.
        O formato segue o padrão REST com recursos JSON e especificação OpenAPI 3.0.
  contact:
    email: apiteam@comprebem.com.br
  version: 1.0.0
externalDocs:
  description: Mais sobre CompreBem Marketeplace API
  url: https://comprebem.com.br/apis
servers:
  - url: https://api.comprebem.com.br/mkt-api/v1
tags:
  - name: Produtos
    description: Tudo relacionado a Produtos
    externalDocs:
      description: Find out more
      url: https://comprebem.com.br/apis
paths:
  /produtos:
    get:
      tags:
        - Produtos
      summary: Obtém produtos
      description: Obtém uma listagem de produtos. Alguns parâmetros para busca podem ser usados. Esse recurso também implementa paginação.
      operationId: obterProdutos
      parameters:
        - in: query
          name: nomeProduto
          description: Nome do produto.
          schema:
            type: string
        - $ref: '#/components/parameters/fields'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: Successful operation
          headers:
            contentRange:
              description: Total de registros existentes.
              schema:
                type: integer
                format: int32
            acceptRange:
              description: Quantidade máxima de registros que podem ser solicitado por requisição.
              schema:
                type: integer
                format: int32
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/produto'
        '401':
          description: Não autorizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '403':
          description: Proibido para esse recurso.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Erro Interno.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    post:
      tags:
        - Produtos
      summary: Cria um novo produto
      description: Cria um novo produto no marketplace.
      operationId: criarProduto
      requestBody:
        description: Objeto produto para criação
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/produtoInput'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produto'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Não autorizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Erro Interno.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
  /produtos/{id}:
    parameters:
      - name: id
        in: path
        description: ID do produto
        required: true
        schema:
          type: string
    get:
      tags:
        - Produtos
      summary: Obtém um produto por id
      description: Retorna os detalhes de um produto específico.
      operationId: obterProdutoPorId
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produto'
        '404':
          description: Produto não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Não autorizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Erro Interno.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    put:
      tags:
        - Produtos
      summary: Atualiza um produto por id
      description: Atualiza os dados de um produto existente.
      operationId: atualizarProduto
      requestBody:
        description: Objeto produto com os campos a atualizar
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/produtoInput'
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/produto'
        '400':
          description: Requisição inválida.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '404':
          description: Produto não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Não autorizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Erro Interno.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
    delete:
      tags:
        - Produtos
      summary: Remove um produto por id
      description: Remove (exclui) um produto do marketplace.
      operationId: deletarProduto
      responses:
        '204':
          description: Produto excluído com sucesso (sem conteúdo)
        '404':
          description: Produto não encontrado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '401':
          description: Não autorizado.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
        '500':
          description: Erro Interno.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponse'
components:
  parameters:
    fields:
      name: _fields
      description: |
        Informar quais atributos devem retornar na resposta. Ex.: _fields=codigo,nome,endereco.
      in: query
      required: false
      schema:
        type: string
    limit:
      name: _limit
      description: Identificação da quantidade de registros a serem retornados.
      in: query
      required: false
      schema:
        type: integer
        format: int32
    offset:
      name: _offset
      description: Identificação do registro inicial a ser retornado.
      in: query
      required: false
      schema:
        type: integer
        format: int32
  schemas:
    produto:
      type: object
      required: [id, name, price, currency, category, status]
      properties:
        id:
          type: string
          example: 9DAFB45372A8
        name:
          type: string
          example: iPhone 17
        price:
          type: number
          format: float
          example: 18000
        currency:
          type: string
          example: BRL
        category:
          type: string
          example: Smart Phone
        status:
          type: string
          enum: [ATIVO, INATIVO]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    produtoInput:
      type: object
      required: [name, price, currency, category, status]
      properties:
        name:
          type: string
          example: iPhone 17
        price:
          type: number
          format: float
          example: 18000
        currency:
          type: string
          example: BRL
        category:
          type: string
          example: Smart Phone
        status:
          type: string
          enum: [ATIVO, INATIVO]
    errorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          example: ERR_NOT_FOUND
        message:
          type: string
          example: Recurso não encontrado
        details:
          type: object
          additionalProperties: true
