openapi: 3.0.3
info:
  title: CompreBem Marketeplace API — Produtos
  description:       
        # API de Integração de Produtos (CompreBem)
        Esta API permite que os parceiros (lojistas) criem, atualizem, excluam e pesquisem produtos.
        O formato segue o padrão REST com recursos JSON e especificação OpenAPI 3.0.
  version: 1.0.0
  contact:
    email: apiteam@comprebem.com.br

servers:
  - url: https://api.comprebem.com.br/mkt-api/v1
    description: Servidor de produção
  - url: https://api-dev.comprebem.com.br/mkt-api/v1
    description: Servidor de desenvolvimento

tags:
  - name: Produtos
    description: Tudo relacionado a Produtos
    externalDocs:
      description: Find out more
      url: https://comprebem.com.br/apis
paths:
  /products:
    get:
      tags:
        - Products
      summary: Lista todos os produtos
      description: Retorna uma lista de produtos com opções de filtro
      operationId: listProducts
      parameters:
        - name: category
          in: query
          description: Filtrar por categoria
          required: false
          schema:
            type: string
        - name: status
          in: query
          description: Filtrar por status
          required: false
          schema:
            type: string
            enum: [ACTIVE, INACTIVE]
        - name: limit
          in: query
          description: Número máximo de resultados
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
            maximum: 100
        - name: offset
          in: query
          description: Número de registros para pular
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
      responses:
        '200':
          description: Lista de produtos retornada com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  total:
                    type: integer
                    description: Total de produtos
                  limit:
                    type: integer
                  offset:
                    type: integer
        '400':
          description: Requisição inválida
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Products
      summary: Cria um novo produto
      description: Adiciona um novo produto ao sistema
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Produto criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /products/{productId}:
    get:
      tags:
        - Products
      summary: Busca um produto por ID
      description: Retorna os detalhes de um produto específico
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID do produto
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Produto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Products
      summary: Atualiza um produto
      description: Atualiza todos os campos de um produto existente
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          description: ID do produto
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      tags:
        - Products
      summary: Atualiza parcialmente um produto
      description: Atualiza apenas os campos fornecidos de um produto
      operationId: patchProduct
      parameters:
        - name: productId
          in: path
          description: ID do produto
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductPatch'
      responses:
        '200':
          description: Produto atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Dados inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Products
      summary: Remove um produto
      description: Remove um produto do sistema
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: ID do produto
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Produto removido com sucesso
        '404':
          description: Produto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      required:
        - productId
        - name
        - price
        - currency
        - category
        - status
      properties:
        productId:
          type: string
          description: Identificador único do produto
          example: "PROD-12345"
        name:
          type: string
          description: Nome do produto
          example: "Notebook Dell Inspiron"
        price:
          type: number
          format: double
          description: Preço do produto
          example: 3499.99
        currency:
          type: string
          description: Moeda do preço
          example: "BRL"
        category:
          type: string
          description: Categoria do produto
          example: "Eletrônicos"
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: Status do produto
          example: "ACTIVE"
        updatedAt:
          type: string
          format: date-time
          description: Data e hora da última atualização
          example: "2025-10-22T14:30:00Z"

    ProductInput:
      type: object
      required:
        - productId
        - name
        - price
        - currency
        - category
        - status
      properties:
        productId:
          type: string
          description: Identificador único do produto
          example: "PROD-12345"
        name:
          type: string
          description: Nome do produto
          example: "Notebook Dell Inspiron"
        price:
          type: number
          format: double
          description: Preço do produto
          example: 3499.99
        currency:
          type: string
          description: Moeda do preço
          example: "BRL"
        category:
          type: string
          description: Categoria do produto
          example: "Eletrônicos"
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: Status do produto
          example: "ACTIVE"

    ProductPatch:
      type: object
      properties:
        name:
          type: string
          description: Nome do produto
        price:
          type: number
          format: double
          description: Preço do produto
        currency:
          type: string
          description: Moeda do preço
        category:
          type: string
          description: Categoria do produto
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
          description: Status do produto

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Código de erro
          example: "PRODUCT_NOT_FOUND"
        message:
          type: string
          description: Mensagem de erro legível
          example: "O produto solicitado não foi encontrado"